name: Publish

on:
  release:
    types: [published]
  pull_request:

defaults:
  run:
    shell: bash

jobs:

  # publish:
  #   uses: stellar/actions/.github/workflows/rust-publish.yml@main
  #   secrets:
  #     CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            apt-install: gcc-aarch64-linux-gnu aarch64-linux-gnu-g++
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe
    runs-on: ${{ matrix.os }}
    env:
      VERSION: '${{ github.event.release.release.name }}'
      NAME: 'soroban-cli-${{ github.event.release.release.name }}-${{ matrix.target }}'
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: rustup target add ${{ matrix.target }}
    - if: matrix.apt-install
      run: sudo apt-get -y install ${{ matrix.apt-install }}
    - name: Package
      run: cargo package --no-verify
    - name: Build
      run: |
        cd target/package
        tar xvfz soroban-cli-$VERSION.crate
        cd soroban-cli-$VERSION
        cargo build --target-dir=../.. --release --target ${{ matrix.target }}
    - uses: actions/upload-artifact@v3
      with:
        name: soroban-${{ matrix.os }}-${{ matrix.target }}-${{ matrix.runs-on }}
        path: 'target/${{ matrix.target }}/release/soroban${{ matrix.ext }}'
    # - name: Upload
    #   uses: actions/github-script@v6
    #   with:
    #     script: |
    #       const fs = require('fs');
    #       await github.rest.repos.uploadReleaseAsset({
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         release_id: ${{ github.event.release.release.id }},
    #         name: '${{ env.NAME }}${{ matrix.ext }}',
    #         data: fs.readFileSync('target/${{ matrix.target }}/release/soroban${{ matrix.ext }}'),
    #       });
