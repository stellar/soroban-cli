name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  RUSTFLAGS: -Dwarnings -Dclippy::all -Dclippy::pedantic

jobs:

  complete:
    if: always()
    needs: [fmt, rust-analyzer-compat, build-and-test, publish-dry-run]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: cargo fmt --all --check

  rust-analyzer-compat:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: rustup +nightly component add rust-analyzer
    - name: Check if rust-analyzer encounters any errors parsing project
      run: rustup run nightly rust-analyzer analysis-stats . 2>&1 | (! grep ERROR)

  build-and-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: rustup target add ${{ matrix.target }}
    - run: cargo clippy --all-targets --target ${{ matrix.target }}
    - run: make build-test-wasms
    - run: cargo test --workspace --target ${{ matrix.target }}

  e2e-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: stellar/actions/rust-cache@main
      - run: rustup update
      - run: rustup target add ${{ matrix.target }}
      # TODO: we should probably manage the container in the test itself
      # TODO: do a proper functional check on the container startup instead of waiting 15 seconds
      - run: make build-test-wasms
      - run: docker run -d -p 8000:8000 stellar/quickstart:soroban-dev --standalone --enable-soroban-rpc --enable-core-artificially-accelerate-time-for-testing --protocol-version 20 && sleep 15
      - run: cargo test --test 'e2e*' --target ${{ matrix.target }} -- --ignored

  publish-dry-run:
    if: startsWith(github.head_ref, 'release/')
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
    uses: stellar/actions/.github/workflows/rust-publish-dry-run.yml@main
    with:
      runs-on: ${{ matrix.os }}
      cargo-package-options: --target ${{ matrix.target }}
