name: Rust

on:
  push:
    branches: [main]
  pull_request:

env:
  RUSTFLAGS: -Dwarnings -Dclippy::all -Dclippy::pedantic

jobs:

  complete:
    needs: [fmt, build-and-test]
    runs-on: ubuntu-latest
    steps:
    - run: exit 0

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: find . -type f -name '*.rs' -print0 | xargs -I {} -0 rustfmt --check "{}"

  build-and-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - run: rustup update
    - run: rustup target add ${{ matrix.target }}
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: cargo-
    - uses: actions/cache@v3
      with:
        path: target/
        key: ${{ github.job }}-target-${{ strategy.job-index }}-${{ github.sha }}
        restore-keys: |
          ${{ github.job }}-target-${{ strategy.job-index }}
          ${{ github.job }}-target-
    - if: github.ref_protected
      run: rm -fr target
    - run: cargo clippy --all-targets --target ${{ matrix.target }}
    - run: cargo test --target ${{ matrix.target }}
